version: "3.9"

services:
    # Java Application Service
    java_app:
      container_name: ${APP_HOST:-inventory} # Uses APP_HOST from .env, defaults to 'inventory'
      # The image will be built from the current directory using the Dockerfile
      image: pee-java_app:${APP_VERSION:-1.0.0} # Uses APP_VERSION from .env, defaults to '1.0.0'
      build: . # Build context is the current directory, where the Dockerfile should be
      ports:
        - "${APP_PORT:-8080}:${APP_PORT:-8080}" # Maps host port to container port for the Java app
      env_file:
        - ./.env # Loads environment variables from the .env file
      depends_on:
        - rabbitmq_broker # Ensures RabbitMQ is up before the Java app starts
        - mongo_db # Ensures MongoDB is up before the Java app starts
      networks:
        - public # Connects to the 'public' network

    # RabbitMQ Message Broker Service
    rabbitmq_broker:
      container_name: ${RABBITMQ_HOST:-rabbitmq_broker} # Uses RABBITMQ_HOST from .env, defaults to 'rabbitmq_broker'
      image: rabbitmq:3-management # Includes the RabbitMQ management UI
      ports:
        - "${RABBITMQ_PORT:-5672}:${RABBITMQ_PORT:-5672}" # Maps host port to container port for RabbitMQ client connections
        - "15672:15672" # Maps host port to container port for RabbitMQ Management UI
      env_file:
        - ./.env # Loads environment variables for RabbitMQ from the .env file
      networks:
        - public # Connects to the 'public' network

    # MongoDB Database Service
    mongo_db:
      container_name: ${MONGO_HOST:-mongo_db}
      image: mongo:latest
      ports:
        - "${MONGO_PORT:-27017}:${MONGO_PORT:-27017}"
      env_file:
        - ./.env
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      volumes:
        - mongo_data:/data/db
      networks:
        - public

# Define networks and volumes
networks:
  public:
    external: true # Assumes 'public' network already exists or will be created manually

volumes:
  mongo_data:
